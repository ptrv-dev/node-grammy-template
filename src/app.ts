import { Bot, type Context } from 'grammy';
import { hydrateReply, parseMode, ParseModeFlavor } from '@grammyjs/parse-mode';
import { randomBytes } from 'crypto';
import { config, logger } from '@/utils';

const BOT_TOKEN = config.get('BOT_TOKEN');

const bot = new Bot<ParseModeFlavor<Context>>(BOT_TOKEN);

bot.use(hydrateReply);
bot.api.config.use(parseMode('HTML'));

bot.start({
  onStart: ({ username }) => {
    logger.success(`Telegram Bot @${username} successfully started.`);
  },
});

bot.catch(({ ctx, name, message, stack }) => {
  const code = randomBytes(4).toString('hex');
  logger.error(
    `Telegram Bot unhandled error! #${code}\n${name}\n${message}\n${stack}`
  );
  ctx.reply(
    `<b>üí¢ –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞! üí¢</b>\n\n–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –µ—â—ë —Ä–∞–∑. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–µ.\n\n–ö–æ–¥ –æ—à–∏–±–∫–∏: <code>${code}</code>`
  );
});
